#!/usr/bin/env ruby

require 'geocode/static'
require 'slop'

# Don't like duplicating the arguments across the commands
# Don't like putting exit in each command (easier way to handle required command?)
# Don't like manually having to check for invalid arguments
# Don't like that 'geocode-static updat -V' complains "Unknown options -V" instead of the obvious misspelled command
# (small) I wish '--help CMD' would work the same as 'CMD --help', like git does


begin
  opts = Slop.parse(strict: true, help: true) do
    on :v, :version, 'Print the version' do
      puts "Geocode Static #{Geocode::Static::VERSION}"
      exit
    end

    command 'generate' do
      on :V, :verbose, 'Enable verbose mode'
      on :c, :config, 'Use a config file'
      run do |opts, args|
        puts "You ran 'generate' with options #{opts.to_hash} and args: #{args.inspect}"
        exit
      end
    end

    command 'update' do
      on :V, :verbose, 'Enable verbose mode'
      on :c, :config, 'Use a config file'
      run do |opts, args|
        puts "You ran 'update' with options #{opts.to_hash} and args: #{args.inspect}"
        exit
      end
    end
  end

  raise Slop::InvalidOptionError.new("Unknown options " + ARGV.inspect) unless ARGV.empty?
  raise Slop::InvalidOptionError.new("You must supply a command") # ideally I'd output --help here
rescue Slop::InvalidOptionError => e
  puts e.message
end

